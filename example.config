#REQUIRED PARAMETERS
treefile_path =  example/example.tre
number_of_variable_sites = 20
base_genome_name = gi
base_genome_path =  example/mini_ref.fasta
output_dir = example_out
# parameters of evolutionary model (comma seperated), in order ac, ag, at, cg, ct, gc (gc = 1)
rate_matrix = 1,1,1,1,1,1



# OPTIONAL PARAMETERS
prefix = sim_ #optional prefix prepended to sequence names, default is using orginal sequence names
threads = 10

#Optional evolutionary model parameters
gamma_shape = 5 #dafault is no rate variation across sites

#parameters for clustering of variable site locations (OPTIONAL)
mutation_clustering = ON
percent_clustered = 0.25 #The percentage of variable sites whose distance to another site is drawn from the clustering distribution
exponential_mean = 125 #Minimum allowed value = 2

## ART Optional parameters (for more fine grained control ART can be run seperately on the mutated genomes found in outdir/fasta_files)
#error_model1 = example/ErrprofR1.txt  # If you haven't generated have one of your own using ART, you can use one supplied by ART.
#error_model2 = example/ErrprofR2.txt  # Un-comment these lines (delete the first #) to set a non-default error profile

## Read length, can be one value or list of comma separated values up to 250bp
## Read length may be truncated if selected read platform doesn't support it
read_length = 150,250

## Insert fragment length.  Can be uniform [fragment_size] 
## or randomly distributed between [frag_low, frag_high]
fragment_size = 380
# frag_low = 600 # Start of random frag length range
# frag_high = 1000 # End of random frag length range
# frag_step = 7 # Step size for binning frag length

## Insert fragment length standard deviation.  Can be uniform [stdev_frag_size] 
## or randomly distributed between [stdev_frag_low, stdev_frag_high]
stdev_frag_size = 120
# stdev_frag_low = 10 # Start of random frag length stdev range
# stdev_frag_high = 100 # End of random frag length stdev range
# stdev_frag_step = 3 # Step size for binning frag length stdev

## Average genomic real coverage.  Can be uniform [coverage] across dataset
## or randomly distributed between [coverage_low, coverage_high]
coverage = 20
# coverage_low = 20 # Start of random coverage range
# coverage_high = 87 # End of random coverage range
# coverage_step = 1 # Step size for binning random coverage

## Average QS2 bias to introduce.  Can be 0 (no value provided) across dataset
# or randomly distributed between [qs2_low, qs2_high]
# qs2_low = -3 # Start of QS2 bias range
# qs2_high = 0 # End of QS2 bias range
# qs2_step = 1 # Step size for binning QS2 bias

# Platform read error profile used to generate reads
readProfile = MSv3 # Read platform
## Supports the following (between read length)
## Defaults to MiSeq v3 to allow reads up to 250bp
## GA1 - GenomeAnalyzer I (1-44bp), GA2 - GenomeAnalyzer II (1-75bp)
## HS10 - HiSeq 1000 (1-100bp), HS20 - HiSeq 2000 1-100bp), HS25 - HiSeq 2500 (1-150bp)
## HSXn - HiSeqX PCR free (1-150bp), HSXt - HiSeqX TruSeq (1-150bp),  MinS - MiniSeq TruSeq (1-50bp)
## MSv1 - MiSeq v1 (1-250bp), MSv3 - MiSeq v3 (1-250bp), NS50 - NextSeq500 v2 (1-75bp)